name: SonarQube Analysis

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read

jobs:
  sonarqube:
    name: SonarQube Static Code Analysis
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh
        working-directory: src
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis

      - name: Setup .NET 8.x SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\NuGet\v3-cache
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: |
            ${{ runner.os }}-sonar

      - name: Install SonarQube Scanner for .NET
        run: |
          dotnet tool install --global dotnet-sonarscanner

      - name: .NET info
        run: dotnet --info

      - name: Restore dependencies
        run: dotnet restore Idasen-Desk.sln

      - name: Begin SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          if ([string]::IsNullOrEmpty($env:SONAR_TOKEN) -or [string]::IsNullOrEmpty($env:SONAR_HOST_URL)) {
            Write-Warning "SonarQube secrets not configured. Skipping analysis."
            Write-Warning "Please configure SONAR_TOKEN and SONAR_HOST_URL secrets in repository settings."
            exit 0
          }
          dotnet sonarscanner begin /k:"idasen-desk" /d:sonar.host.url="${env:SONAR_HOST_URL}" /d:sonar.login="${env:SONAR_TOKEN}"

      - name: Build
        run: |
          if ([string]::IsNullOrEmpty($env:SONAR_TOKEN) -or [string]::IsNullOrEmpty($env:SONAR_HOST_URL)) {
            Write-Host "Skipping build as SonarQube analysis was skipped"
            exit 0
          }
          dotnet build Idasen-Desk.sln --configuration Release --no-restore
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: End SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          if ([string]::IsNullOrEmpty($env:SONAR_TOKEN) -or [string]::IsNullOrEmpty($env:SONAR_HOST_URL)) {
            Write-Host "Skipping end analysis as SonarQube analysis was skipped"
            exit 0
          }
          dotnet sonarscanner end /d:sonar.login="${env:SONAR_TOKEN}"
